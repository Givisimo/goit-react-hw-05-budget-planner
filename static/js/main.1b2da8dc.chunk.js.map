{"version":3,"sources":["components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","redux/plannerActions.jsx","redux/plannerTypes.jsx","redux/plannerSelectors.jsx","components/ExpenseForm.js","components/ExpensesTable.js","components/Value.js","components/Values.js","components/App.js","redux/plannerReducer.jsx","redux/store.jsx","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","state","budget","handleChange","e","setState","target","handleSubmit","preventDefault","alert","onSave","Number","this","Component","connect","dispatch","payload","getExpenses","expense","calculateAllExpenses","reduce","total","amount","ExpenseForm","balance","plannerSelectors","id","shortid","generate","plannerActions","Table","table","items","onRemove","map","key","Container","div","isPositive","p","Amount","Value","section","expenses","App","combineReducers","action","filter","store","createStore","plannerReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b2da8dc.chunk.js","sourcesContent":["import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: T.func.isRequired,\n  children: T.node.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: T.node.isRequired,\n  customStyles: T.string.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.defaultProps = {\n  value: null,\n  name: '',\n};\n\nInput.propTypes = {\n  type: T.string.isRequired,\n  value: T.oneOfType([T.string, T.number]),\n  name: T.string,\n  onChange: T.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.defaultProps = {\n  onClick: null,\n  type: 'button',\n};\n\nButton.propTypes = {\n  type: T.string,\n  label: T.string.isRequired,\n  onClick: T.func,\n};\nexport default Button;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport T from 'prop-types';\nimport * as plannerActions from '../redux/plannerActions';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  static propTypes = {\n    onSave: T.func.isRequired,\n  };\n\n  state = {\n    budget: ' ',\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { budget } = this.state;\n    e.preventDefault();\n    if (budget <= 0) {\n      // eslint-disable-next-line no-alert\n      alert('wrong value, try again');\n      return;\n    }\n    this.props.onSave(Number(this.state.budget));\n    this.setState({ budget: ' ' });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  onSave: budget => dispatch(plannerActions.budgetAdd(budget)),\n});\n\nexport default connect(null, mapDispatchToProps)(BudgetForm);\n","import shortid from 'shortid';\nimport * as types from './plannerTypes';\n\nexport const budgetAdd = value => {\n  return {\n    type: types.ADD_BUDGET,\n    payload: {\n      value,\n    },\n  };\n};\n\nexport const expenseAdd = ({ name, amount }) => {\n  return {\n    type: types.ADD_EXPENSE,\n    payload: {\n      expense: {\n        id: shortid.generate(),\n        name,\n        amount,\n      },\n    },\n  };\n};\n\nexport const expenseRemove = id => {\n  return {\n    type: types.REMOVE_EXPENSE,\n    payload: {\n      id,\n    },\n  };\n};\n","export const ADD_BUDGET = 'ADD_BUDGET';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\n","const getBudget = state => state.budget;\nconst getExpenses = state => state.expense;\n\nconst calculateAllExpenses = state => {\n  const expenses = getExpenses(state);\n  return expenses.reduce((total, expense) => total + expense.amount, 0);\n};\n\nconst calculateBalance = state => {\n\n  return state.budget - calculateAllExpenses(state);\n};\n\nexport default {\n  getBudget,\n  getExpenses,\n  calculateAllExpenses,\n  calculateBalance,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport T from 'prop-types';\nimport Form from './shared/Form';\nimport * as plannerActions from '../redux/plannerActions';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport plannerSelectors from '../redux/plannerSelectors';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass ExpenseForm extends Component {\n  static propTypes = {\n    onSave: T.func.isRequired,\n    balance: T.number.isRequired,\n  };\n\n  state = {\n    name: '',\n    amount: ' ',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { name, amount } = this.state;\n    e.preventDefault();\n    if (!name) {\n      // eslint-disable-next-line no-alert\n      alert('expense name is missing');\n      return;\n    }\n    if (amount <= 0) {\n      // eslint-disable-next-line no-alert\n      alert('expense amount is missing');\n      return;\n    }\n    const expense = {\n      name: this.state.name,\n      amount: Number(this.state.amount),\n    };\n    if (expense.amount > this.props.balance) {\n      alert('Balance is negative!');\n      return;\n    }\n    this.props.onSave(expense);\n    this.setState({ name: '', amount: ' ' });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { balance: plannerSelectors.calculateBalance(state) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: expense => dispatch(plannerActions.expenseAdd(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport Button from './shared/Button';\nimport plannerSelectors from '../redux/plannerSelectors';\nimport * as plannerActions from '../redux/plannerActions';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      name: T.string.isRequired,\n      amount: T.number.isRequired,\n    }),\n  ).isRequired,\n  onRemove: T.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return { items: plannerSelectors.getExpenses(state) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(plannerActions.expenseRemove(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Amount = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Value = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Amount>{value}&nbsp;&#x24;</Amount>\n  </Container>\n);\n\nexport default Value;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport Value from './Value';\nimport plannerSelectors from '../redux/plannerSelectors';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Value label=\"Budget\" value={budget} isPositive />\n    <Value label=\"Expenses\" value={expenses} />\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nValues.propTypes = {\n  budget: T.number.isRequired,\n  expenses: T.number.isRequired,\n  balance: T.number.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    budget: plannerSelectors.getBudget(state),\n    expenses: plannerSelectors.calculateAllExpenses(state),\n    balance: plannerSelectors.calculateBalance(state),\n  };\n};\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport BudgetForm from './BudgetForm';\nimport ExpenseForm from './ExpenseForm';\nimport ExpensesTable from './ExpensesTable';\nimport Values from './Values';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      <ExpensesTable />\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport * as types from './plannerTypes';\n\nconst budgetReducer = (state = 0, action) => {\n  switch (action.type) {\n    case types.ADD_BUDGET:\n      return action.payload.value;\n\n    default:\n      return state;\n  }\n};\n\nconst expenseReducer = (state = [], action) => {\n  switch (action.type) {\n    case types.ADD_EXPENSE:\n      return [...state, action.payload.expense];\n    case types.REMOVE_EXPENSE:\n      return state.filter(expense => expense.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  budget: budgetReducer,\n  expense: expenseReducer,\n});\n","import { createStore } from 'redux';\nimport plannerReducer from './plannerReducer';\n\nconst store = createStore(\n  plannerReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}